package com.togrulseyid.funnyvideos.adapters;

import java.util.ArrayList;

import android.app.Activity;
import android.util.DisplayMetrics;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;
import com.togrulseyid.funnyvideos.R;
import com.togrulseyid.funnyvideos.models.VideoModel;

public class VideosListAdapter extends BaseAdapter {

	private ArrayList<VideoModel> models;
	private Activity activity;
	private ViewHolder viewHolder;
	private int density;

	public VideosListAdapter(Activity activity, ArrayList<VideoModel> models) {
		this.activity = activity;
		this.models = models;
		this.density = activity.getResources().getDisplayMetrics().densityDpi;
	}

	@Override
	public int getCount() {
		return models.size();
	}

	@Override
	public VideoModel getItem(int position) {
		return models.get(position);
	}

	@Override
	public long getItemId(int id) {
		return id;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup viewGroup) {

		View view = convertView;
		if (convertView == null) {

			view = activity.getLayoutInflater().inflate(
					R.layout.item_videos_list_fragment, viewGroup, false);
			viewHolder = new ViewHolder();

			viewHolder.imageView = (ImageView) view
					.findViewById(R.id.imageViewItemVideosListFragment);
			viewHolder.textView = (TextView) view
					.findViewById(R.id.textViewItemVideosListFragment);

			view.setTag(viewHolder);

		} else {
			viewHolder = (ViewHolder) view.getTag();
		}

		VideoModel model = getItem(position);

		if (model != null) {

			if (model.getTitle() != null) {

				viewHolder.textView.setText(model.getTitle());

			}

			if (model.getSrc() != null) {

				Picasso.with(activity).load(imageGenerator(model.getSrc()))
						.error(R.drawable.video_default)
						.placeholder(R.drawable.video_default)
						.into(viewHolder.imageView);

			}

		} else {
			view.setVisibility(View.GONE);
		}

		return view;
	}

	private String imageGenerator(String src) {
		String imagePath;
		switch (density) {
		case DisplayMetrics.DENSITY_LOW:
			imagePath = "http://img.youtube.com/vi/" + src + "/default.jpg";
			break;

		case DisplayMetrics.DENSITY_MEDIUM:
			imagePath = "http://img.youtube.com/vi/" + src + "/mqdefault.jpg";
			break;

		case DisplayMetrics.DENSITY_HIGH:
			imagePath = "http://img.youtube.com/vi/" + src + "/hqdefault.jpg";
			break;

		case DisplayMetrics.DENSITY_XHIGH:
			imagePath = "http://img.youtube.com/vi/" + src + "/sddefault.jpg";
			break;

		case DisplayMetrics.DENSITY_XXHIGH:
			imagePath = "http://img.youtube.com/vi/" + src
					+ "/maxresdefault.jpg";
			break;

		case DisplayMetrics.DENSITY_XXXHIGH:
			imagePath = "http://img.youtube.com/vi/" + src
					+ "/maxresdefault.jpg";
			break;

		default:
			imagePath = "http://img.youtube.com/vi/" + src + "/default.jpg";
			break;
		}

		return imagePath;
	}

	private class ViewHolder {
		private TextView textView;
		private ImageView imageView;
	}
}
