package com.togrulseyid.funnyvideos.fragments;

import android.content.res.Configuration;
import android.os.AsyncTask;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.DialogFragment;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.ProgressBar;
import android.widget.TextView;

import com.togrulseyid.funnyvideos.R;
import com.togrulseyid.funnyvideos.adapters.ChannelListAdapter;
import com.togrulseyid.funnyvideos.constants.MessageConstants;
import com.togrulseyid.funnyvideos.models.ChannelListModel;
import com.togrulseyid.funnyvideos.models.CoreModel;
import com.togrulseyid.funnyvideos.operations.NetworkOperations;

public class ChannelListFragment extends Fragment {

	private ChannelListAdapter adapter;
	private GridView gridView;
	private ProgressBar progressBar;
	private TextView textViewInternetConnection;
	private ChannelListModel channelListModel;
	private DialogFragment dialogFragment;
	private TvToast messageToast;

	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {

		setHasOptionsMenu(true);
		View contentView = inflater.inflate(R.layout.fragment_channel_list,
				container, false);

		gridView = (GridView) contentView
				.findViewById(R.id.gridViewChannelListFragmentGrid);
		progressBar = (ProgressBar) contentView
				.findViewById(R.id.progressBarChannelListFragmentProgress);

		textViewInternetConnection = (TextView) contentView
				.findViewById(R.id.textViewInternetConnection);

		gridView.setOnItemClickListener(new ChannelListOnItemClickListener());

		if (Build.VERSION.SDK_INT > Build.VERSION_CODES.HONEYCOMB) {
			gridView.setSelector(getResources().getDrawable(
					R.drawable.selector_channel_list));
		}

		new ChannelListAsyncTask().execute();

		return contentView;
	}

	@Override
	public void onStart() {
		super.onStart();
	}

	@Override
	public void onPause() {
		super.onPause();
	}

	@Override
	public void onDestroy() {
		super.onDestroy();
	}

	@Override
	public void onConfigurationChanged(Configuration newConfig) {
		super.onConfigurationChanged(newConfig);
	}

	@Override
	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
		inflater.inflate(R.menu.menu_fragment_channel_list, menu);
		super.onCreateOptionsMenu(menu, inflater);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {

		switch (item.getItemId()) {

		case android.R.id.home:
			break;

		case R.id.action_refresh_fragment_channellist:
			new ChannelListAsyncTask().execute();
			break;

		default:
			break;
		}

		return super.onOptionsItemSelected(item);
	}

	private class ChannelListAsyncTask extends
			AsyncTask<Void, Integer, ChannelListModel> {

		@Override
		protected void onPreExecute() {
			super.onPreExecute();

			messageToast = new TvToast(getActivity());
			progressBar.setVisibility(View.VISIBLE);
		}

		@Override
		protected ChannelListModel doInBackground(Void... params) {
			NetworkOperations networkOperations = new NetworkOperations(
					getActivity());
			return networkOperations.getChannelListModel(new CoreModel());
		}

		@Override
		protected void onPostExecute(ChannelListModel result) {
			super.onPostExecute(result);

			Log.d("testTV", "ChannelListModel: " + result);

			channelListModel = result;

			if (result != null && result.getMessageId() != null) {

				if (result.getMessageId() == MessageConstants.SUCCESSFUL) {

					progressBar.setVisibility(View.GONE);
					adapter = new ChannelListAdapter(getActivity(), result);
					gridView.setAdapter(adapter);

				} else {

					progressBar.setVisibility(View.GONE);
					messageToast.makeToast(result.getMessageId());
					textViewInternetConnection.setVisibility(View.VISIBLE);

				}

			} else {

				progressBar.setVisibility(View.GONE);
				messageToast.makeToast(MessageConstants.SERVER_ERROR_1);
				textViewInternetConnection.setVisibility(View.VISIBLE);

			}

		}

	}

	private class ChannelListOnItemClickListener implements OnItemClickListener {

		@Override
		public void onItemClick(AdapterView<?> adapterView, View view,
				int position, long id) {

			dialogFragment = new UrlChooserDialogFragment(channelListModel
					.getChannelModels().get(position).getUrls(),
					channelListModel.getChannelModels().get(position), position);
			dialogFragment.show(
					getActivity().getSupportFragmentManager(),
					getResources().getString(
							R.string.title_dialog_channel_url_chooser));

		}

	}

}
